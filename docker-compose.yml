---
services:
  app:
    image: app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    env_file:
      - ./.env.example
    volumes:
      - .:/var/www/html
    depends_on:
      database:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
  database:
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: bible
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - ./tmp:/docker-entrypoint-initdb.d
      - db-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized" ]
      start_period: 1m
      start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3
  postgres:
    image: pgvector/pgvector
    environment:
      POSTGRES_USER: homestead
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: bible
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U homestead -d bible"]
      start_period: 1m
      interval: 10s
      timeout: 5s
      retries: 3      
  mailpit:
    image: axllent/mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
  composer:
    image: app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    command: php composer.phar install
  node:
    image: node
    build:
      context: .
      dockerfile: Dockerfile.node
    volumes:
      - .:/app
    command: npm --no-bin-link install
  gulp:
    image: node
    build:
      context: .
      dockerfile: Dockerfile.node
    volumes:
      - .:/app
    command: 'node_modules/gulp/bin/gulp.js'
    depends_on:
      composer:
        condition: service_completed_successfully
      node:
        condition: service_completed_successfully
  migrator:
    image: app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env.example
    volumes:
      - .:/var/www/html
    command: php artisan migrate -n
    depends_on:
      database:
        condition: service_healthy
      composer:
        condition: service_completed_successfully
volumes:
  db-data:
