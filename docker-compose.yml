---
services:
  # traefik:
  #   image: traefik:v3.3
  #   restart: unless-stopped
  #   command:
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entryPoints.web.address=:80"
  #     - "--entryPoints.websecure.address=:443"
  #     ## TODO review the following configuration
  #     - "--certificatesresolvers.myresolver.acme.email=info@szentiras.hu"
  #     - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
  #     ## TODO http -> https redirect
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - letsencrypt:/letsencrypt
  #   networks:
  #     - default
  #     - traefik
  app:
    image: app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - storage:/var/www/html/storage
    env_file:
      - ./.env
    depends_on:
      database:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      ## TODO get host from .env
      - "traefik.http.routers.app.rule=Host(`szentiras.hu`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=myresolver"
      - "traefik.http.services.app.loadbalancer.server.port=80"
    networks:
      - traefik
      - default
  database:
    image: mariadb
    env_file:
      - ./.env
    volumes:
      - ./tmp:/docker-entrypoint-initdb.d
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 3
  sphinx:
    image: nsign/sphinx-docker:2.2.11
  postgres:
    image: pgvector/pgvector
    environment:
      POSTGRES_USER: homestead
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: bible
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U homestead -d bible"]
      start_period: 1m
      interval: 10s
      timeout: 5s
      retries: 3      
  mailpit:
    image: axllent/mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
  composer:
    image: app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./deploy/production/sphinx/sphinx.conf.in:/etc/sphinxsearch/sphinx.conf.in:ro
      - ./docker/sphinx/start.sh:/start.sh:ro
      - sphinx_data:/var/data
    env_file:
      - ./.env
    depends_on:
      database:
        condition: service_healthy
volumes:
  db-data:
  storage:
  letsencrypt:
  sphinx_data:
networks:
  traefik:
